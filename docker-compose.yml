version: '3'

services:
  caddy:
    image: caddy:latest
    container_name: caddy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - /share/caddy/data:/data
      - /share/caddy/config:/config
      - static_volume:/app/static
    networks:
      - caddy_network
    depends_on:
      - backend

  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    networks:
      - caddy_network
    volumes:
      - minio_data:/data
    command: server --console-address ":9001" /data

  minio-client:
    image: minio/mc
    depends_on:
      - minio
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    networks:
      - caddy_network
    entrypoint: >
      /bin/sh -c "
      until (echo > /dev/tcp/minio/9000) &> /dev/null; do
        echo 'Waiting for minio...';
        sleep 3;
      done;
      /usr/bin/mc alias set myminio http://minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD};
      /usr/bin/mc mb myminio/storage;
      exec /bin/sh;
      "

  db:
    image: postgres:15
    env_file:
      - ./.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - caddy_network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    volumes:
      - static_volume:/app/static
    networks:
      - caddy_network
    command: ["poetry", "run", "python", "run.py"]
    depends_on:
      - db
      - minio
    env_file:
      - ./.env

volumes:
  postgres_data:
  static_volume:
  minio_data:

networks:
  caddy_network: